services:
  # ===================== 前端 (Flutter Web + Nginx) =====================
  frontend:
    image: kikichain-flutter-web:latest
    container_name: kikichain-frontend
    restart: unless-stopped
    platform: linux/amd64
    ports:
      - "80:80"     # HTTP
      - "443:443"   # HTTPS
    environment:
      - TZ=Asia/Shanghai
    volumes:
      # 挂载 Nginx 配置文件
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # 挂载 Certbot 证书，使 Nginx 容器能访问
      - ./data/certbot/conf:/etc/letsencrypt:ro
      # 挂载 Certbot 验证目录
      - ./data/certbot/www:/var/www/certbot:ro
      # 挂载前端静态资源
      # - ./frontend/nginx-assets:/usr/share/nginx/html:ro
    depends_on:
      - backend
    networks:
      - kikichain-network

  # ===================== 后端 (Rust API) =====================
  backend:
    image: kikichain-server:latest
    container_name: kikichain-backend
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://qisd:qisd@postgres:5432/edadb
      - JWT_SECRET=KCiUh7wCULKLwFo2OWd3glfE3F9tRpRk/9RW162sBRIg3IOjFNXxTlcpiGfIINnd
      - RUST_LOG=info
    expose:
      - "8001"   # 仅内网访问
    depends_on:
      - postgres
    networks:
      - kikichain-network

  # ===================== 数据库 (Postgres) =====================
  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: qisd
      POSTGRES_PASSWORD: qisd
      POSTGRES_DB: edadb
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432" 
    # expose:
      # - "5432:5432"
    networks:
      - kikichain-network

  # ===================== HTTPS 证书 (Certbot) =====================
  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      # 挂载 Certbot 验证目录
      - ./data/certbot/www:/var/www/certbot
      # 挂载证书存放目录
      - ./data/certbot/conf:/etc/letsencrypt
      # >>>>>>> 新增的日志卷挂载 <<<<<<<
      - ./data/certbot/log:/var/log/letsencrypt
    # 自动续期命令，每 12 小时运行一次
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $!; done;'"
    networks:
      - kikichain-network

# ===================== 网络 =====================
networks:
  kikichain-network:
    driver: bridge

# ===================== 数据卷 =====================
volumes:
  pgdata:
  nginx-assets: